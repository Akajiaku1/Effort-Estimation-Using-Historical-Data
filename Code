import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the historical project data
data = pd.read_csv("historical_data.csv")

# Preview the data
print("Sample Data:")
print(data.head())

# Define features and target
features = ['Project_Size', 'Team_Experience', 'Complexity']
target = 'Estimated_Effort'

X = data[features]
y = data[target]

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Train a Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nModel Performance:")
print(f"Mean Squared Error: {mse:.2f}")
print(f"RÂ² Score: {r2:.2f}")

# Predicting effort for a new project example
new_project = pd.DataFrame([{
    'Project_Size': 12000,
    'Team_Experience': 5,
    'Complexity': 2
}])

predicted_effort = model.predict(new_project)
print("\nPredicted Effort for New Project:")
print(f"{predicted_effort[0]:.2f} person-months")
